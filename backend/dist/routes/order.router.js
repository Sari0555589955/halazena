"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = require("express");
const order_controller_1 = require("../controller/order.controller");
const enums_enum_1 = require("../enum/enums.enum");
const authentication_middleWare_1 = require("../middleWares/authentication.middleWare");
const checkRoles_middleWare_1 = require("../middleWares/checkRoles.middleWare");
const validator_middleWare_1 = require("../middleWares/validator.middleWare");
const order_model_1 = require("../model/order.model");
const router = (0, express_1.Router)();
router.route('/add').post(authentication_middleWare_1.Authentication, (0, checkRoles_middleWare_1.checkRole)(enums_enum_1.Roles.USER, enums_enum_1.Roles.ADMIN, enums_enum_1.Roles.SUPER_ADMIN), (0, validator_middleWare_1.validate)(order_model_1.orderValidation, 'post'), order_controller_1.createOrder);
router.route('/getAll/:params?').get(authentication_middleWare_1.Authentication, (0, checkRoles_middleWare_1.checkRole)(enums_enum_1.Roles.ADMIN, enums_enum_1.Roles.SUB_ADMIN, enums_enum_1.Roles.USER, enums_enum_1.Roles.SUPER_ADMIN), order_controller_1.getALLOrders);
router.route('/getOrdersByUser').get(authentication_middleWare_1.Authentication, (0, checkRoles_middleWare_1.checkRole)(enums_enum_1.Roles.USER, enums_enum_1.Roles.ADMIN, enums_enum_1.Roles.SUPER_ADMIN, enums_enum_1.Roles.SUB_ADMIN), order_controller_1.getOrdersByUser);
router.route('/delete/:orderId').delete(authentication_middleWare_1.Authentication, (0, checkRoles_middleWare_1.checkRole)(enums_enum_1.Roles.ADMIN, enums_enum_1.Roles.SUPER_ADMIN), order_controller_1.deleteOrder);
router.route('/update/:orderId').put(authentication_middleWare_1.Authentication, (0, checkRoles_middleWare_1.checkRole)(enums_enum_1.Roles.ADMIN, enums_enum_1.Roles.SUPER_ADMIN), order_controller_1.UpdateOrder);
router.route('/getById/:orderId').get(authentication_middleWare_1.Authentication, (0, checkRoles_middleWare_1.checkRole)(enums_enum_1.Roles.ADMIN, enums_enum_1.Roles.SUB_ADMIN, enums_enum_1.Roles.USER, enums_enum_1.Roles.SUPER_ADMIN), order_controller_1.getOrderById);
router.route('/howmanyInDay').get(authentication_middleWare_1.Authentication, (0, checkRoles_middleWare_1.checkRole)(enums_enum_1.Roles.ADMIN, enums_enum_1.Roles.SUPER_ADMIN, enums_enum_1.Roles.SUB_ADMIN), order_controller_1.getHowManyOrdersInOneDay);
exports.default = router;
